<?php 
session_start();
include("connection.php");
include("functions.php");

$user_data = isset($_SESSION['user_data']) ? $_SESSION['user_data'] : null;
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Recipes4U</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
<header>
    <h1>Recipes4U</h1>
</header>
<main>
    <div id="searchBar">
        <b>What would you like to cook today?</b>
        <p>Anything you would like to cook, you can input here.</p>
        <div class="search-bar">
            <input type="text" placeholder="Search recipes..." id="search-input">
            <button type="submit" id="search-button">Search</button>
        </div>
    </div>

    <div id="ingredientOwn">
        <b>Fill in the box below with ingredients that you own!</b>
        <p>We can find you available recipes based on your input.</p>
        <div id="ingredientInputWrapper">
            <textarea id="ingredients-input" name="enter your ingredients here..." cols="50" rows="10"></textarea>
            <button id="enter-button">Enter</button>
        </div>
    </div>

    <div id="ingredientList">
        <b>You can also press and hold on any of the common ingredients from below.</b>
    </div>
    <!-- temporary output, kinda ugly so we gott spruce it up -->
    <div id="recipeOutput">
        <h2>Generated Recipe:</h2>
        <div id="recipe-text"></div>
    </div>

    <div id="authLinks">
        <a href="login">Login</a> |
        <a href="register">Register</a> |
        <a href="savedRecipes">savedRecipes</a>
    </div>
</main>

<script>
    document.getElementById("enter-button").addEventListener("click", generateRecipe);

    async function generateRecipe() {
        const ingredients = document.getElementById("ingredients-input").value;
        const recipeOutput = document.getElementById("recipe-text");

        if (!ingredients.trim()) {
            recipeOutput.innerHTML = "Add ingredients";
            return;
        }

        try {
            const response = await fetch("https://api.openai.com/v1/chat/completions", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer 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`
                },
                body: JSON.stringify({
                    model: "gpt-3.5-turbo",
                    messages: [
                        {
                            role: "system",
                            content: "You are a chef who generates recipes based on a list of ingredients provided."
                        },
                        {
                            role: "user",
                            content: `Create a recipe using the following ingredients: ${ingredients}. Please also provide the title, the ingredients, the instructions, 
                            the macros (protein, carbs, fat) ,the total calories for the recipe and any allergies.`
                        }
                    ]
                })
            });

            const data = await response.json();
            if (response.ok) {
                const recipe = data.choices[0].message.content;
                recipeOutput.innerHTML = `<pre>${recipe}</pre>`;

                const tempTitle = recipe.match(/Recipe: (.*)/);
                const tempIngredients = recipe.match(/Ingredients:([\s\S]*?)Instructions:/);
                const tempInstructions = recipe.match(/Instructions:([\s\S]*)/);
                const tempMacros = recipe.match(/Macros:\n([\s\S]*?)\n\n/);
                const tempAllergies = recipe.match(/Allergies:\n([\s\S]*)/);

                if (tempTitle && tempIngredients && tempInstructions){
                    const title=tempTitle[1].trim();
                    const ingredients=tempIngredients[1].trim();
                    const instructions=tempInstructions[1].trim();
                    const macros=tempMacros[1].trim();
                    const allegies=tempAllergies[1].trim();
                    await fetch('/createRecipes', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            title,
                            ingredients,
                            instructions
                        })
                    });
                }
            } else {
                recipeOutput.innerHTML = `Error: ${data.error.message}`;
            }
        } catch (error) {
            recipeOutput.innerHTML = `Error: ${error.message}`;
        }
    }

</script>
</body>
</html>
